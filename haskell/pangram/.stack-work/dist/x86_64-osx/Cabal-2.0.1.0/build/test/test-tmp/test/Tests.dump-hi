
==================== FINAL INTERFACE ====================
2018-01-20 19:02:52.10857 UTC

interface main:Main 8022
  interface hash: e42e71dba0098b8685b9ae41815044c1
  ABI hash: 87cc507655c98ffb5c0867a8b4aa87ed
  export-list hash: 51e8ff0c8081b14a31d88a7d678f0150
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ceba4ce9de875b2bad78653ef2c6ae33
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.10.1
                      ansi-terminal-0.7.1.1 array-0.5.2.0 async-2.1.1.1 base-4.10.1.0
                      call-stack-0.1.0 colour-2.3.4 containers-0.5.10.2 deepseq-1.4.3.0
                      directory-1.3.0.2 filepath-1.4.1.2 ghc-boot-th-8.2.2
                      ghc-prim-0.5.1.1 hspec-2.4.4 hspec-core-2.4.4
                      hspec-expectations-0.8.2 integer-gmp-1.0.1.0 pangram-1.4.0.6
                      pretty-1.1.3.3 primitive-0.6.2.0 quickcheck-io-0.2.0 random-1.1
                      setenv-0.1.1.3 stm-2.4.4.1 template-haskell-2.12.0.0 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.2.0 unix-2.7.2.2
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         transformers-0.5.2.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.4.4.1:Control.Monad.STM base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.4:Test.Hspec.Core.Example
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0:Control.Monad.Primitive
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  hspec-2.4.4:Test.Hspec 917f73e7880f4d00e7f96bf294ccc197
import  -/  hspec-2.4.4:Test.Hspec.Runner 76ee7a45c2f90c0efa69a5b4a82c0d59
import  -/  hspec-core-2.4.4:Test.Hspec.Core.Options bb781f7ab113f22dac5250ef654e6b99
import  -/  hspec-core-2.4.4:Test.Hspec.Core.Runner dcbaaf75cc4a7da1f1e0ae3788372a84
import  -/  hspec-core-2.4.4:Test.Hspec.Core.Spec 4371b0f2302c6aee07c9624d075941a2
import  -/  hspec-core-2.4.4:Test.Hspec.Core.Spec.Monad ab7f07f5b1a38960f1f314c9b4df6b9c
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 8bc0d926d5b42398a254e04604809fe4
import  -/  pangram-1.4.0.6:Pangram 488027b6f65de6281d5435fae90e8b4f
a18e4bb2f0674ee24612719199a84dab
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8197111133229858407##
                   13847006553897280588##
                   Main.$trModule
                   Main.$tc'Case2
                   0#
                   Main.$tc'Case1) -}
8f010006a57838aae2252530b9cbf5fc
  $tc'Case1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b4f883606fd905089344438718b2c630
  $tc'Case2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Case3) -}
b70b9a2f50a01b383c0fc203a93b45f6
  $tc'Case3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Case"#) -}
fb54e6971b8cdb3d6eb813b73e5967b8
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   990021888930651814##
                   4262142848388084561##
                   Main.$trModule
                   Main.$tcCase1
                   0#
                   GHC.Types.krep$*) -}
d6f1567c5e9fb74d00e1be64470ce3d3
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcCase2) -}
7179be3aa9b5f07778c569f16b1ed2bf
  $tcCase2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Case"#) -}
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
50879a499c6da0a0a9750fb9fcdf2818
  data Case
    = Case {description :: GHC.Base.String,
            input :: GHC.Base.String,
            expected :: GHC.Types.Bool}
50879a499c6da0a0a9750fb9fcdf2818
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds1 }) -}
50879a499c6da0a0a9750fb9fcdf2818
  expected :: Main.Case -> GHC.Types.Bool
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds3 }) -}
50879a499c6da0a0a9750fb9fcdf2818
  input :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds2 }) -}
3fa91f9701336708472198000149a226
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
03d7ea4164dc3950c8592ad0833e0250
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main139
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.exitFailure1 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
a7eeca6be5126f043d478f94d7bca8b8
  main10 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main84
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main11) -}
00b7afad6e36b83b8512e5127837410f
  main100 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main101) -}
13abe2892aa103f4b833629618765a1a
  main101 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("a quick movement of the enemy will jeopardize five gunboats"#) -}
00246da105c040b87bff96c033230803
  main102 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main63
                   Main.main103) -}
3e0af8c6d6273bd1642c3d8235710268
  main103 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main104) -}
efe9e6abeb78aae312d23c1f6208ea54
  main104 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("issing character 'x'"#) -}
e02e7eaee7719b5cf9a4c935d6e23ed2
  main105 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main106
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
f894283731351d1935b9aed456277345
  main106 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main107) -}
4d22b9e6d1c0a0cc92424fec6b9dcdae
  main107 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main112
                   Main.main23
                   GHC.Types.False
                   Main.main108
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
97309dc54fd2a43fd7f97ee4743e02f6
  main108 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main109 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
13bbcdc3ef1a7ae43d8c722fa1123c19
  main109 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (Pangram.filterOccur
                           (GHC.Base.map
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              GHC.Unicode.toLower
                              Main.main110))
                        0# of ww2 {
                   DEFAULT -> Main.main46 eta2 26# -> (# eta2, GHC.Tuple.() #) }) -}
12fd33a3f114d47474e13df88fbed138
  main11 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main74
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main12) -}
7579d41952234edbd4f159a182129dde
  main110 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main111) -}
36fe74d49327590e42a7e7f88f2ccfac
  main111 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("the quick brown fox jumps over the lazy dog"#) -}
26f6be91b3524113da0ac6caa1d28538
  main112 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main52
                   Main.main113) -}
0448fa527a28a6d060043f9cdc0a525d
  main113 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main114) -}
efafaddbc9500d5ec1658e72dfac52ea
  main114 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("angram with only lower case"#) -}
38b7a08ff0f797709a81de0436e87bb9
  main115 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main116
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
4cd926c359e46a0b4ad69cd60f5c3f2a
  main116 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main117) -}
b9931ae263dbe7d88202af590d516fa1
  main117 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main122
                   Main.main23
                   GHC.Types.False
                   Main.main118
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
d9d749c2f7fb509defdc5e2c908be4e8
  main118 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main119 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
71f07e9b1415e86c906d71ae39812a39
  main119 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (Pangram.filterOccur
                           (GHC.Base.map
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              GHC.Unicode.toLower
                              Main.main120))
                        0# of ww2 {
                   DEFAULT -> Main.main46 eta2 26# -> (# eta2, GHC.Tuple.() #) }) -}
52f2e2c4036103fd24999215107b463d
  main12 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main64
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main13) -}
3194f7ccfacff91385a489b7fa71007a
  main120 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main121) -}
6551f1b967142d692dbc04aa81504de1
  main121 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("abcdefghijklmnopqrstuvwxyz"#) -}
0aac08815958dda1082d96ac95b3e755
  main122 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main125
                   Main.main123) -}
6a48ca3530eb89225b57330620f13fd4
  main123 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main124) -}
c635603bc1d3e213a408877cddd52c86
  main124 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("ecognizes a perfect lower case pangram"#) -}
cff8ae98cedd3d62b6c3f8236b786ae2
  main125 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'r'#) -}
3b04cfcec95e90eb39acf2b104fcb44e
  main126 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main127
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
a1a2d8fd95fdd6371bee092a8fb755f6
  main127 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main128) -}
f1dfd43eb5b1c133dc060e54c9fef1f1
  main128 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main131
                   Main.main23
                   GHC.Types.False
                   Main.main129
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
d84eaae3a5017c711433301e798408b9
  main129 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main130 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
3381da27adb252f2fa06e3d7b0280dd2
  main13 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main53
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main14) -}
0b10b669c22f62577ac35341b8e27564
  main130 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (Pangram.filterOccur
                           (GHC.Base.map
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              GHC.Unicode.toLower
                              (GHC.Types.[] @ GHC.Types.Char)))
                        0# of ww2 {
                   DEFAULT -> (# eta2, GHC.Tuple.() #) 26# -> Main.main20 eta2 }) -}
414e7c9bfcb58a6a0f6dfd0f666a73c6
  main131 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main134
                   Main.main132) -}
baecd83dc2e5a759175943b02d34a43f
  main132 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main133) -}
ebc7d41d80842bb730ab1cfdee7dfbb8
  main133 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("entence empty"#) -}
a67563275d3f2e716b71a6f3612a9ddf
  main134 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 's'#) -}
541b0db1b3a38a4f11664b8492dc8562
  main135 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main138
                   Main.main136) -}
dcd67fe40e95d20c026767f64b414167
  main136 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main137) -}
bca9d7c7a009d54b9ca935d7ed20c8d9
  main137 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sPangram"#) -}
b8957a6e8015cff7c76c24ad80953d02
  main138 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'i'#) -}
3288d345160761e228c498830919f990
  main139 :: Test.Hspec.Core.Options.Config
  {- Unfolding: (Test.Hspec.Core.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
71eb4b86763c3d591c498a964defbd4e
  main14 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main41
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main15
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))) -}
19fd0cb2c7e7e75977772c60989b8fdc
  main140 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
af60936708c1bef9cd907b1e31a4b5d6
  main15 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main16
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
cc3481774d78f6bfea94095d43db6f2d
  main16 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main17) -}
93eddfaf9718964782085d8cb386ab8c
  main17 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main37
                   Main.main23
                   GHC.Types.False
                   Main.main18
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
9a2e76fea14ac49d303fc5f2b53d4d80
  main18 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main19 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
93a5740b8fe99c042b08908d4e1c3d53
  main19 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (Pangram.filterOccur
                           (GHC.Base.map
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              GHC.Unicode.toLower
                              Main.main21))
                        0# of ww2 {
                   DEFAULT -> (# eta2, GHC.Tuple.() #) 26# -> Main.main20 eta2 }) -}
6ec8a2aa976826b1d9a3a918d99203a6
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta, Main.main3 #)) -}
d543f65e4aa40086bbdf34fba33e8987
  main20 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
5fdec933630cb4c99382ea66af79883d
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main22) -}
7f0c638ea09e2e3e1a2af63970630a8a
  main22 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("the quick brown fox jumps over with lazy FX"#) -}
bc9407167422e93411e15ce3c83cb96e
  main23 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13 Main.main24) -}
baa82ee054149527ba8762fc8b39b142
  main24 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   Main.main25) -}
80d4d5381e38d39879635cef945e1147
  main25 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   Main.main26) -}
c6b1f7d68a8989bc5cde84ce99f36709
  main26 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main35
                   Main.main27
                   GHC.Stack.Types.EmptyCallStack) -}
acc68a9567453875ad55c397f1a305cd
  main27 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main34
                   Main.main33
                   Main.main31
                   Main.main30
                   Main.main29
                   Main.main30
                   Main.main28) -}
621d139161b705c46fa5b7fadbec4bc7
  main28 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 35#) -}
db7f5a820ed8f86de6419c41ca334f73
  main29 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
e2e61ebdd51f3e739fd9fbebfb9fbf73
  main3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Strictness: m, Unfolding: ((GHC.Tuple.(), Main.main4)) -}
96bb1e892117fc30be768bed2ddbd1c0
  main30 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 15#) -}
fea001b2115fdd4de40fa7eb24ea420f
  main31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main32) -}
8546b2676e5a85cae5412112d3e20afe
  main32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test/Tests.hs"#) -}
344721a7592877f8a9a4e5da0044af85
  main33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
c7493efc6009747fa73c621842eb3166
  main34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
649cb1be45a27b1f95358d52e03077ba
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main36) -}
4771473ebe3d2356719d87345b584af1
  main36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
6499dae6883fa3eb8866f5ba02f5d26a
  main37 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main40
                   Main.main38) -}
8cefeff30e79b80b63a7dc1d3b43ed6d
  main38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main39) -}
265f542ee1138f6e73bb203603ce60ba
  main39 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("pper and lower case versions of the same character should not be counted separately"#) -}
af9f3b67b25dffa3b30dac9bf6718180
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
a56c10bf8d520d27105bf5a92e054a0b
  main40 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'u'#) -}
aab9fa523d0ed5eb81a665990d51b3b0
  main41 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main42
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
4b0216b8673adbe6156b7e522dc1e011
  main42 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main43) -}
c054c56425cfb517772c8fa032a720ea
  main43 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main49
                   Main.main23
                   GHC.Types.False
                   Main.main44
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
c746b7f145fc7667e0c7b1adcc872832
  main44 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main45 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
ada15acd2122b96f68f92604cfe0a454
  main45 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (Pangram.filterOccur
                           (GHC.Base.map
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              GHC.Unicode.toLower
                              Main.main47))
                        0# of ww2 {
                   DEFAULT -> Main.main46 eta2 26# -> (# eta2, GHC.Tuple.() #) }) -}
66a5b826ecfae97b49ebdb021dafc02d
  main46 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
71295334f869f4065b94770632809ade
  main47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main48) -}
bd605c09af522f20fdc6108ede3c5ff8
  main48 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\"Five quacking Zephyrs jolt my wax bed.\""#) -}
5c2f245828d98acc86b62bbcf824f987
  main49 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main52
                   Main.main50) -}
0bf7daab1ee665067a0596c4d29cdf70
  main5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main135
                   Main.main6) -}
cb3dcf47c84d69a0e16c634bf3ff3e8e
  main50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main51) -}
57bb437dec721fc1714fa566d7b6f359
  main51 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("angram with mixed case and punctuation"#) -}
a961f8a84849897c4d6a28bc2f954fff
  main52 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'p'#) -}
f0912ffe37eae7987092532dbf2bcf1e
  main53 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main54
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
e7728790031d2263e69d4bf449ea55c3
  main54 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main55) -}
921f878d0976d07aed45d2993560ce0a
  main55 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main60
                   Main.main23
                   GHC.Types.False
                   Main.main56
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
1b802affe27bb46107562bab23e2f5c7
  main56 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main57 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
3b3d7e5758cde3e01180199c969b3ac5
  main57 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (Pangram.filterOccur
                           (GHC.Base.map
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              GHC.Unicode.toLower
                              Main.main58))
                        0# of ww2 {
                   DEFAULT -> (# eta2, GHC.Tuple.() #) 26# -> Main.main20 eta2 }) -}
35f374ae4bd5f137f347e46f0ecf7903
  main58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main59) -}
5faf8d09b9cb2712968a89a217725f2c
  main59 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("7h3 qu1ck brown fox jumps ov3r 7h3 lazy dog"#) -}
cf68195900256033e938ddacdfb61e4b
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main126
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main7) -}
ebe820072fd6d8ee245dce4018ba0912
  main60 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main63
                   Main.main61) -}
d5307f83377686553e72c84edf72f04c
  main61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main62) -}
ed76b8f0302aa96662029f27d0a65d9e
  main62 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("issing letters replaced by numbers"#) -}
af49c876ddeb1e696edee80ed379c5ea
  main63 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'm'#) -}
3cff858060ec6376425c694003477c78
  main64 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main65
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
4a9212aaa1449a597dde8d4e74857edf
  main65 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main66) -}
573d382835090f303ed9ca683bb3b653
  main66 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main71
                   Main.main23
                   GHC.Types.False
                   Main.main67
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
3bc96e4027fd6fe381dd64fca05a6094
  main67 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main68 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
e460cdfb2af68ca3ef6221234625b51c
  main68 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (Pangram.filterOccur
                           (GHC.Base.map
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              GHC.Unicode.toLower
                              Main.main69))
                        0# of ww2 {
                   DEFAULT -> Main.main46 eta2 26# -> (# eta2, GHC.Tuple.() #) }) -}
9c6a5803c7ceaa4374a86a1a07294e71
  main69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main70) -}
4a7e6caf1ad01ca079f1e26e6783bc8b
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main115
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main8) -}
d54fb386a7bd072384aee22a2d3df2d5
  main70 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("the 1 quick brown fox jumps over the 2 lazy dogs"#) -}
204905f03ca16f055f292f5b290a3cfd
  main71 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main52
                   Main.main72) -}
d6a63931e42088d4abfa3cfa98e97730
  main72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main73) -}
f302db3bb332e789e524240d4ab7dde6
  main73 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("angram with numbers"#) -}
2816107a95b55a096989865e22fa84f6
  main74 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main75
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
e4a3f1c301b4ee11f40192cf1ff07173
  main75 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main76) -}
436c9472b60f1dfe1a800ed8dc3a1e5e
  main76 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main81
                   Main.main23
                   GHC.Types.False
                   Main.main77
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
705df9600e610866af04cf60f8c4aa7a
  main77 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main78 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
4c457aff39d15d7f248a8f89fa6139fb
  main78 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (Pangram.filterOccur
                           (GHC.Base.map
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              GHC.Unicode.toLower
                              Main.main79))
                        0# of ww2 {
                   DEFAULT -> Main.main46 eta2 26# -> (# eta2, GHC.Tuple.() #) }) -}
1b15add9b424a6582d6e6a081f6500fd
  main79 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main80) -}
9baa5f17703febe5d7fec9dc678cfb52
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main105
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main9) -}
dbc6b9cefe5ac28d029e9f429f4f897e
  main80 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("the_quick_brown_fox_jumps_over_the_lazy_dog"#) -}
87926671f397a1b5f93a11ce60dbcf73
  main81 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main52
                   Main.main82) -}
960eb3b75ca79c6fa2a1b85b7ca6a181
  main82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main83) -}
98309e19bb402c43849f2aa2b2efff0d
  main83 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("angram with underscores"#) -}
77c2c703c022cfadcf42f56f47de7aaf
  main84 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main85
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
a4530cc06f5c7084f99ccb09957b833c
  main85 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main86) -}
76b25755a6dae55d5658105f5ee0e67e
  main86 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main91
                   Main.main23
                   GHC.Types.False
                   Main.main87
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
e825115adea176f5168d41303ce5b92a
  main87 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main88 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
ad18a5233d49883893299381c6eaf451
  main88 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (Pangram.filterOccur
                           (GHC.Base.map
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              GHC.Unicode.toLower
                              Main.main89))
                        0# of ww2 {
                   DEFAULT -> (# eta2, GHC.Tuple.() #) 26# -> Main.main20 eta2 }) -}
057eaf61968a4045c7b6255ba48eea61
  main89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main90) -}
ba80447846ee3481a1031e0a42aeeab4
  main9 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main95
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main10) -}
af4a278ebd09eb5cd467d5eff3dbafe4
  main90 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("five boxing wizards jump quickly at it"#) -}
334124d8a44f3d5c61b735b438bd953a
  main91 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main94
                   Main.main92) -}
50c87111a79d90ee64315c364979985c
  main92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main93) -}
389d89fd15a44bbd3f29a6b55eb9872e
  main93 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("nother missing character, e.g. 'h'"#) -}
3f087f4fadeb44bc282fd0a144faba4c
  main94 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'a'#) -}
b5704358fba36d9f8779ac4c853d302d
  main95 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main96
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
741cfbc2269589925ba7fae3ddc95343
  main96 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main97) -}
b560e6de81d6d4ba29fa799169fa73af
  main97 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main102
                   Main.main23
                   GHC.Types.False
                   Main.main98
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
617bc8555dabf926b47adf2b75feb182
  main98 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main99 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
cedd8c387aa7ac4b41b905a48cf55223
  main99 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (Pangram.filterOccur
                           (GHC.Base.map
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              GHC.Unicode.toLower
                              Main.main100))
                        0# of ww2 {
                   DEFAULT -> (# eta2, GHC.Tuple.() #) 26# -> Main.main20 eta2 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

